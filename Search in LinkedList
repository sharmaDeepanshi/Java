public class Linked_List {
    public static class Node{
        int data;
        Linked_List.Node next;
        public Node(int data){
            this.data=data;
            this.next=null;
        }
    }
    public static Linked_List.Node head;
    public static Linked_List.Node tail;

    public  void addFirst(int data){
        //create new node
        Node newNode=new Node(data);
        if(head==null){
            head=tail=newNode;
            return;
        }

        newNode.next=head;//link
        head=newNode;
    }
    public void addLast(int data){
        Node newNode=new Node(data);
        if(head==null){
            head=tail=newNode;
            return;
        }

        tail.next=newNode;
        tail=newNode;
    }
    public void add(int idx,int data){
        if(idx==0){
           addFirst(data);
           return;
        }

        Node newNode=new Node(data);
        Node temp=head;
        int i=0;

        while(i<idx-1){
            temp=temp.next;
            i++;
        }
        newNode.next=temp.next;
        temp.next=newNode;
    }
    
    public int itrSearch(int key){                           //iterative search
        Node temp=head;
        int i=0;

        while(temp!=null){
            if(temp.data==key){   //key found
                return i;
            }
            temp=temp.next;
            i++;
        }
        return -1;
    }
    public int helper(Node head,int key){
        if(head==null){
            return -1;
        }
        if(head.data==key){
            return 0;
        }
        int idx=helper(head.next,key);
        if(idx==-1){
            return -1;
        }
        return idx+1;
    }
    public int recSearch(int key){                              //recursive search
        return helper(head,key);
    }
  
    public void printList(){
        Node temp=head;
        while(temp!=null){
            System.out.print(temp.data+"-> ");
            temp=temp.next;
        }
        System.out.println("null");
    }
    public static void main(String[] args) {

        Linked_List ll=new Linked_List();
        ll.addFirst(2);
        ll.addFirst(1);
        ll.addLast(3);
        ll.addLast(4);
        ll.add(2,7);

        System.out.println(ll.itrSearch(3)); 
        System.out.println(ll.itrSearch(1));

   
        System.out.println(ll.recSearch(2));
        System.out.println(ll.recSearch(10));
    }
}
